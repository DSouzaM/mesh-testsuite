#!/bin/bash
set -euxo pipefail

VOLUME="mesh-artifact-data"

RUN_COUNT='1'

RUN_FLAGS="--privileged --rm --mount type=volume,src=$VOLUME,dst=/data"

docker volume rm "$VOLUME" || true
docker volume create "$VOLUME" || true

TEST='1-redis'
# docker run $RUN_FLAGS bpowers/mesh-artifact-$TEST ./test --runs $RUN_COUNT --data-dir=/data/$TEST

TEST='2-spec'
# (cd 2-spec/runner && ./test)

TEST='3-ruby'
# docker run $RUN_FLAGS bpowers/mesh-artifact-$TEST ./test --runs $RUN_COUNT --data-dir=/data/$TEST

TEST='0-firefox'
docker run $RUN_FLAGS --ipc=host -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY "$(cat ./$TEST/IMAGE-NAME)" ./entrypoint.sh 1

sudo rm -rf ./results-old
if [ -d ./results ]; then
    mv ./results ./results-old
fi
mkdir -p ./results

docker run $RUN_FLAGS --mount type=bind,src=$PWD/results,dst=/results bpowers/mesh-artifact-$TEST sh -c 'cp -r /data/* /results/'
