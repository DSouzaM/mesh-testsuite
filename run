#!/bin/bash
set -euo pipefail
# set -x

sudo su -c 'echo 655350 > /proc/sys/vm/max_map_count'
sudo cpupower frequency-set -g performance 2>/dev/null || true

# so firefox is authorized to talk to X from within the containter
xhost local:root

VOLUME="mesh-artifact-data"

# default is for reproducible runs
RUN_COUNT='20'

while (( "$#" )); do
    if [[ '--getting-started' == "$1" ]]; then
        echo "Getting Started -- fewer runs"
        RUN_COUNT='2'
    else
        echo "unknown argument $1"
        exit 1
    fi
    shift
done

RUN_FLAGS="--privileged --rm -t --mount type=volume,src=$VOLUME,dst=/data" 

docker volume rm "$VOLUME" || true
docker volume create "$VOLUME" || true

FF_WAIT_SECS="$(head -n 1 firefox-wait-seconds)"
TEST='0-firefox'
echo "running $TEST ($RUN_COUNT)"
docker run $RUN_FLAGS --ipc=host -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY "$(cat ./$TEST/IMAGE-NAME)" ./entrypoint.sh $RUN_COUNT $FF_WAIT_SECS "speed"
docker run $RUN_FLAGS --ipc=host -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY "$(cat ./$TEST/IMAGE-NAME)" ./entrypoint.sh $RUN_COUNT $FF_WAIT_SECS "memory"

sudo rm -rf ./results-old
if [ -d ./results ]; then
    mv ./results ./results-old
fi
mkdir -p ./results

ANALYSIS_RUN="docker run $RUN_FLAGS --mount type=bind,src=$PWD/results,dst=/results --mount type=bind,src=$PWD/analysis,dst=/analysis,readonly mwdsouza/mesh-artifact-support "

$ANALYSIS_RUN sh -c 'cp -r /data/* /results/'

# docker sucks sometimes
sudo chown -R $USER results

# delete results for short-lived subprocesses firefox spawns
find results/0-firefox/memory -name '*.tsv' -size -10k -delete

# ./analysis/0-firefox.py
# (cd results/0-firefox/memory; rm -f jemalloc.tsv; ln -s $(ls -t speedometer.jemalloc*.tsv | head -n 1) jemalloc.tsv)
# (cd results/0-firefox/memory; rm -f mesh.tsv; ln -s $(ls -t speedometer.mesh*.tsv | head -n 1) mesh.tsv)
# $ANALYSIS_RUN sh -c 'SOURCE_DATE_EPOCH=0 R --vanilla <analysis/figure-6-firefox.r'
