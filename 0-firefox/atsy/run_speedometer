#!/bin/bash
set -euxo pipefail

MAX_MAP_COUNT="$(sysctl vm.max_map_count | cut -d '=' -f 2)"

if (( $MAX_MAP_COUNT < 100000 )); then
   echo "increase max_map_count before test:"
   echo sudo su -c "'echo 655350 > /proc/sys/vm/max_map_count'"
   echo sudo cpupower frequency-set -g performance
   exit 1
fi

pkill geckodriver || true
pkill firefox || true


if [ $TEST_METRIC = "memory" ]; then
   echo "Running speedometer memory test"
   COMMAND="env/bin/python atsy/example/comp_analysis.py -c atsy/example/comp_analysis_conf_speedometer.py --content-processes 0 -b Firefox --per_tab_pause $TEST_WAIT_SECS --settle_wait_time 1"
elif [ $TEST_METRIC = "speed" ]; then
   echo "Running speedometer speed test"
   mkdir -p /data/0-firefox/speed
   COMMAND="env/bin/python atsy/example/comp_analysis.py -c atsy/example/comp_analysis_conf_speedometer.py --content-processes 0 -b Firefox --per_tab_pause $TEST_WAIT_SECS --settle_wait_time 1 | tee -a /data/0-firefox/speed/results.tsv"
elif [ $TEST_METRIC = "cache" ]; then
   echo "Running speedometer cache test"
   COMMAND="env/bin/python atsy/example/comp_analysis.py -c atsy/example/comp_analysis_conf_speedometer.py --content-processes 0 -b Firefox --per_tab_pause $TEST_WAIT_SECS --settle_wait_time 1"
else
   echo "Unsupported metric $TEST_METRIC."
   exit 1
fi

export TEST_LD_PRELOAD=libmesh.so
export TEST_NAME=mesh
export MALLOCSTATS=1
eval $COMMAND

sleep 5
pkill geckodriver || true
pkill firefox || true

unset TEST_LD_PRELOAD
unset MALLOCSTATS
export TEST_NAME=libc
eval $COMMAND

sleep 5
pkill geckodriver || true
pkill firefox || true

export TEST_NAME=jemalloc
eval $COMMAND

sleep 5
pkill geckodriver || true
pkill firefox || true
